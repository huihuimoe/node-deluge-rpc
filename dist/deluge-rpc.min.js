!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t(require("stream"),require("axios"),require("form-data")):"function"==typeof define&&define.amd?define(["stream","axios","form-data"],t):(e=e||self).DelugeRPC=t(e.undefined,e.axios,e.FormData)}(this,function(e,t,a){"use strict";e=e&&e.hasOwnProperty("default")?e.default:e,t=t&&t.hasOwnProperty("default")?t.default:t,a=a&&a.hasOwnProperty("default")?a.default:a;const{default:o}=t,s=void 0!==e;return class{constructor(e,t){this.msgId=0,this.cookie="","/"!==e[e.length-1]&&(e+="/"),this.baseUrl=e,this.pass=t}async _makeCall(e,t=[]){1024===this.msgId&&(this.msgId=0);const a={"Content-Type":"application/json"};return s&&(a.Cookie=this.cookie),o.request({url:this.baseUrl+"json",method:"post",data:{method:e,params:t,id:this.msgId++},withCredentials:!0,headers:a})}async auth(){const{data:{result:e}}=await this._makeCall("auth.check_session");if(e)return!0;const{data:t,headers:a}=await this._makeCall("auth.login",[this.pass]);if(!t.result)throw new Error("Auth failed, does the password valided?");return this.cookie=a["set-cookie"][0].split(";")[0],!0}async call(e,t=[]){return this._makeCall(e,t).then(e=>{const t=e.data;if(t.error)throw t.error;return t.result})}async connect(e=0){return"number"==typeof e&&(e=(await this.call("web.get_hosts"))[e][0]),await this.call("web.connect",[e])}async getTorrentRecord(){return await this.auth(),this.call("web.update_ui",[["distributed_copies","download_payload_rate","eta","is_auto_managed","max_download_speed","max_upload_speed","name","num_peers","num_seeds","progress","queue","ratio","save_path","seeds_peers_ratio","state","time_added","total_done","total_peers","total_seeds","total_uploaded","total_wanted","tracker_host","upload_payload_rate"],{}])}async addTorrent(t,r={}){let i;if(await this.auth(),t instanceof Promise&&(t=await t),s&&(t instanceof Buffer||t instanceof e.Readable)&&(i=new a).append("file",t,"upload.torrent"),!s&&(t instanceof File||t instanceof Blob)&&(i=new a).append("file",t,t.name||"upload.torrent"),i){const e={...i.getHeaders()};s&&(e.Cookie=this.cookie);const{data:a}=await o.request({url:this.baseUrl+"upload",method:"post",data:i,withCredentials:!0,headers:e});if(!a.success)throw new Error("Upload torrents failed.");t=a.files[0]}"string"==typeof r&&(r={download_location:r});let n=!1;try{n=!!new URL(t)}catch(e){}return n&&(t=await this.call("web.download_torrent_from_url",[t,r.cookie]),delete r.cookie),r={path:t,options:{file_priorities:[],add_paused:!1,compact_allocation:!0,max_connections:-1,max_download_speed:-1,max_upload_slots:-1,max_upload_speed:-1,prioritize_first_last_pieces:!1,...r}},await this.call("web.add_torrents",[[r]])}}});
//# sourceMappingURL=deluge-rpc.min.js.map
